// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Data.proto

package org.ftccommunity.simulator.net.protocol;

public final class SimulatorData {
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_ftccommunity_simulator_net_protocol_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_ftccommunity_simulator_net_protocol_Data_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_ftccommunity_simulator_net_protocol_Type_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_ftccommunity_simulator_net_protocol_Type_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;

  static {
    String[] descriptorData = {
      "\n\nData.proto\022\'org.ftccommunity.simulator" +
      ".net.protocol\"\204\002\n\004Data\022;\n\004type\030\001 \002(\0132-.o" +
      "rg.ftccommunity.simulator.net.protocol.T" +
      "ype\022E\n\006module\030\002 \002(\01625.org.ftccommunity.s" +
      "imulator.net.protocol.Data.Modules\022\014\n\004in" +
      "fo\030\003 \003(\t\022\017\n\004port\030\004 \001(\005:\0011\022\022\n\010dataName\030\005 " +
      "\001(\t:\000\"E\n\007Modules\022\025\n\021LEGACY_CONTROLLER\020\001\022" +
      "\020\n\014LEGACY_MOTOR\020\002\022\021\n\rLEGACY_SENSOR\020\003\"`\n\r" +
      "DeviceListOld\022;\n\004type\030\001 \002(\0132-.org.ftccom" +
      "munity.simulator.net.protocol.Type\022\022\n\nse",
      "rialized\030\002 \002(\t\"\215\001\n\nDeviceList\022;\n\004type\030\001 " +
      "\002(\0132-.org.ftccommunity.simulator.net.pro" +
      "tocol.Type\022B\n\006bricks\030\002 \003(\01322.org.ftccomm" +
      "unity.simulator.net.protocol.BrickInfo\"g" +
      "\n\tBrickInfo\022;\n\004type\030\001 \002(\0132-.org.ftccommu" +
      "nity.simulator.net.protocol.Type\022\r\n\005alia" +
      "s\030\002 \001(\t\022\016\n\006serial\030\003 \001(\t\"\336\003\n\004Type\022A\n\004type" +
      "\030\001 \002(\01623.org.ftccommunity.simulator.net." +
      "protocol.Type.Types\"\222\003\n\005Types\022\010\n\004NONE\020\001\022" +
      "\020\n\014LEGACY_MOTOR\020\002\022\020\n\014LEGACY_SERVO\020\003\022\020\n\014L",
      "EGACY_LIGHT\020\004\022\020\n\014LEGACY_TOUCH\020\005\022\r\n\tLEGAC" +
      "Y_IR\020\006\022\r\n\tUSB_MOTOR\020\007\022\r\n\tUSB_SERVO\020\010\022\r\n\t" +
      "SENSOR_IR\020\t\022\023\n\017SENSOR_OPT_DIST\020\n\022\020\n\014SENS" +
      "OR_TOUCH\020\013\022\017\n\013DEVICE_LIST\020\014\022\016\n\nBRICK_INF" +
      "O\020\r\022\r\n\tHEARTBEAT\020\016\022\024\n\020LEGACY_TILT_ACCL\020\017" +
      "\022\020\n\014LEGACY_COLOR\020\020\022\017\n\013LEGACY_EOPD\020\021\022\020\n\014L" +
      "EGACY_FORCE\020\022\022\017\n\013LEGACY_GYRO\020\023\022\014\n\010SIM_DA" +
      "TA\020\024\022\r\n\tOPT_DATA1\020\025\022\r\n\tOPT_DATA2\020\026\022\r\n\tOP" +
      "T_DATA3\020\027\022\r\n\tOPT_DATA4\020\030B8\n\'org.ftccommu" +
      "nity.simulator.net.protocolB\rSimulatorDa",
      "ta"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_ftccommunity_simulator_net_protocol_Data_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_ftccommunity_simulator_net_protocol_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_ftccommunity_simulator_net_protocol_Data_descriptor,
        new String[] { "Type", "Module", "Info", "Port", "DataName", });
    internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_descriptor,
        new String[] { "Type", "Serialized", });
    internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_descriptor,
        new String[] { "Type", "Bricks", });
    internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_descriptor,
        new String[] { "Type", "Alias", "Serial", });
    internal_static_org_ftccommunity_simulator_net_protocol_Type_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_ftccommunity_simulator_net_protocol_Type_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_ftccommunity_simulator_net_protocol_Type_descriptor,
        new String[] { "Type", });
  }

  private SimulatorData() {}

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.protocol.Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    Type getType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    TypeOrBuilder getTypeOrBuilder();

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
     */
    boolean hasModule();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
     */
    Data.Modules getModule();

    /**
     * <code>repeated string info = 3;</code>
     */
    com.google.protobuf.ProtocolStringList
        getInfoList();
    /**
     * <code>repeated string info = 3;</code>
     */
    int getInfoCount();
    /**
     * <code>repeated string info = 3;</code>
     */
    String getInfo(int index);
    /**
     * <code>repeated string info = 3;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes(int index);

    /**
     * <code>optional int32 port = 4 [default = 1];</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 4 [default = 1];</code>
     */
    int getPort();

    /**
     * <code>optional string dataName = 5 [default = ""];</code>
     */
    boolean hasDataName();
    /**
     * <code>optional string dataName = 5 [default = ""];</code>
     */
    String getDataName();
    /**
     * <code>optional string dataName = 5 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getDataNameBytes();
  }
  public interface DeviceListOldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.protocol.DeviceListOld)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    Type getType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    TypeOrBuilder getTypeOrBuilder();

    /**
     * <code>required string serialized = 2;</code>
     */
    boolean hasSerialized();
    /**
     * <code>required string serialized = 2;</code>
     */
    String getSerialized();
    /**
     * <code>required string serialized = 2;</code>
     */
    com.google.protobuf.ByteString
        getSerializedBytes();
  }
  public interface DeviceListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.protocol.DeviceList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    Type getType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    TypeOrBuilder getTypeOrBuilder();

    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    java.util.List<BrickInfo>
        getBricksList();
    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    BrickInfo getBricks(int index);
    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    int getBricksCount();
    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    java.util.List<? extends BrickInfoOrBuilder>
        getBricksOrBuilderList();
    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    BrickInfoOrBuilder getBricksOrBuilder(
            int index);
  }
  public interface BrickInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.protocol.BrickInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    Type getType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    TypeOrBuilder getTypeOrBuilder();

    /**
     * <code>optional string alias = 2;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string alias = 2;</code>
     */
    String getAlias();
    /**
     * <code>optional string alias = 2;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    /**
     * <code>optional string serial = 3;</code>
     */
    boolean hasSerial();
    /**
     * <code>optional string serial = 3;</code>
     */
    String getSerial();
    /**
     * <code>optional string serial = 3;</code>
     */
    com.google.protobuf.ByteString
        getSerialBytes();
  }
  public interface TypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.protocol.Type)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
     */
    Type.Types getType();
  }

  /**
   * Protobuf type {@code org.ftccommunity.simulator.net.protocol.Data}
   */
  public  static final class Data extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.protocol.Data)
      DataOrBuilder {
    public static final int TYPE_FIELD_NUMBER = 1;
    public static final int MODULE_FIELD_NUMBER = 2;
    public static final int INFO_FIELD_NUMBER = 3;
    public static final int PORT_FIELD_NUMBER = 4;
    public static final int DATANAME_FIELD_NUMBER = 5;
    public static final com.google.protobuf.Parser<Data> PARSER =
        new com.google.protobuf.AbstractParser<Data>() {
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Data(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.protocol.Data)
    private static final Data DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new Data();
    }

    private int bitField0_;
    private Type type_;
    private int module_;
    private com.google.protobuf.LazyStringList info_;
    private int port_;
    private volatile Object dataName_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Data() {
      module_ = 1;
      info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      port_ = 1;
      dataName_ = "";
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              Modules value = Modules.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                module_ = rawValue;
              }
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                info_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              info_.add(bs);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              dataName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          info_ = info_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Data_descriptor;
    }

    public static Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Data.class, Builder.class);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public Type getType() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public TypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
     */
    public boolean hasModule() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
     */
    public Modules getModule() {
      Modules result = Modules.valueOf(module_);
      return result == null ? Modules.LEGACY_CONTROLLER : result;
    }

    /**
     * <code>repeated string info = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInfoList() {
      return info_;
    }

    /**
     * <code>repeated string info = 3;</code>
     */
    public int getInfoCount() {
      return info_.size();
    }

    /**
     * <code>repeated string info = 3;</code>
     */
    public String getInfo(int index) {
      return info_.get(index);
    }

    /**
     * <code>repeated string info = 3;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes(int index) {
      return info_.getByteString(index);
    }

    /**
     * <code>optional int32 port = 4 [default = 1];</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional int32 port = 4 [default = 1];</code>
     */
    public int getPort() {
      return port_;
    }

    /**
     * <code>optional string dataName = 5 [default = ""];</code>
     */
    public boolean hasDataName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>optional string dataName = 5 [default = ""];</code>
     */
    public String getDataName() {
      Object ref = dataName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dataName_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string dataName = 5 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getDataNameBytes() {
      Object ref = dataName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dataName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasModule()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, module_);
      }
      for (int i = 0; i < info_.size(); i++) {
        output.writeBytes(3, info_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getDataNameBytes());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, module_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < info_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(info_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getInfoList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDataNameBytes());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    public Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * Protobuf enum {@code org.ftccommunity.simulator.net.protocol.Data.Modules}
     */
    public enum Modules
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LEGACY_CONTROLLER = 1;</code>
       */
      LEGACY_CONTROLLER(0, 1),
      /**
       * <code>LEGACY_MOTOR = 2;</code>
       */
      LEGACY_MOTOR(1, 2),
      /**
       * <code>LEGACY_SENSOR = 3;</code>
       */
      LEGACY_SENSOR(2, 3),
      ;

      /**
       * <code>LEGACY_CONTROLLER = 1;</code>
       */
      public static final int LEGACY_CONTROLLER_VALUE = 1;
      /**
       * <code>LEGACY_MOTOR = 2;</code>
       */
      public static final int LEGACY_MOTOR_VALUE = 2;
      /**
       * <code>LEGACY_SENSOR = 3;</code>
       */
      public static final int LEGACY_SENSOR_VALUE = 3;
      private static final Modules[] VALUES = values();
      private static com.google.protobuf.Internal.EnumLiteMap<Modules>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Modules>() {
              public Modules findValueByNumber(int number) {
                return Modules.valueOf(number);
              }
            };
      private final int index;
      private final int value;

      Modules(int index, int value) {
        this.index = index;
        this.value = value;
      }

      public static Modules valueOf(int value) {
        switch (value) {
          case 1: return LEGACY_CONTROLLER;
          case 2: return LEGACY_MOTOR;
          case 3: return LEGACY_SENSOR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Modules>
          internalGetValueMap() {
        return internalValueMap;
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Data.getDescriptor().getEnumTypes().get(0);
      }

      public static Modules valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      public final int getNumber() {
        return value;
      }

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      // @@protoc_insertion_point(enum_scope:org.ftccommunity.simulator.net.protocol.Data.Modules)
    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.protocol.Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.protocol.Data)
        DataOrBuilder {
      private int bitField0_;
      private Type type_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder> typeBuilder_;
      private int module_ = 1;
      private com.google.protobuf.LazyStringList info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private int port_ = 1;
      private Object dataName_ = "";

      // Construct using org.ftccommunity.simulator.net.protocol.SimulatorData.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Data_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Data.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        module_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        dataName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Data_descriptor;
      }

      public Data getDefaultInstanceForType() {
        return Data.getDefaultInstance();
      }

      public Data build() {
        Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Data buildPartial() {
        Data result = new Data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.module_ = module_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          info_ = info_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dataName_ = dataName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Data) {
          return mergeFrom((Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Data other) {
        if (other == Data.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasModule()) {
          setModule(other.getModule());
        }
        if (!other.info_.isEmpty()) {
          if (info_.isEmpty()) {
            info_ = other.info_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInfoIsMutable();
            info_.addAll(other.info_);
          }
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasDataName()) {
          bitField0_ |= 0x00000010;
          dataName_ = other.dataName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasModule()) {
          return false;
        }
        return getType().isInitialized();
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Data) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? Type.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(
          Type.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(Type value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder mergeType(Type value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              type_ != null &&
              type_ != Type.getDefaultInstance()) {
            type_ =
              Type.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public TypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              Type.getDefaultInstance() : type_;
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder>
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Type, Type.Builder, TypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
       */
      public boolean hasModule() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
       */
      public Modules getModule() {
        Modules result = Modules.valueOf(module_);
        return result == null ? Modules.LEGACY_CONTROLLER : result;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
       */
      public Builder setModule(Modules value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        module_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Data.Modules module = 2;</code>
       */
      public Builder clearModule() {
        bitField0_ = (bitField0_ & ~0x00000002);
        module_ = 1;
        onChanged();
        return this;
      }

      private void ensureInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          info_ = new com.google.protobuf.LazyStringArrayList(info_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInfoList() {
        return info_.getUnmodifiableView();
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public int getInfoCount() {
        return info_.size();
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public String getInfo(int index) {
        return info_.get(index);
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes(int index) {
        return info_.getByteString(index);
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public Builder setInfo(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfoIsMutable();
        info_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public Builder addInfo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfoIsMutable();
        info_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public Builder addAllInfo(
          Iterable<String> values) {
        ensureInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, info_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public Builder clearInfo() {
        info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string info = 3;</code>
       */
      public Builder addInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfoIsMutable();
        info_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 port = 4 [default = 1];</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      /**
       * <code>optional int32 port = 4 [default = 1];</code>
       */
      public int getPort() {
        return port_;
      }

      /**
       * <code>optional int32 port = 4 [default = 1];</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000008;
        port_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 port = 4 [default = 1];</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 1;
        onChanged();
        return this;
      }

      /**
       * <code>optional string dataName = 5 [default = ""];</code>
       */
      public boolean hasDataName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string dataName = 5 [default = ""];</code>
       */
      public String getDataName() {
        Object ref = dataName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dataName_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>optional string dataName = 5 [default = ""];</code>
       */
      public Builder setDataName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        dataName_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string dataName = 5 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getDataNameBytes() {
        Object ref = dataName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dataName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string dataName = 5 [default = ""];</code>
       */
      public Builder setDataNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        dataName_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string dataName = 5 [default = ""];</code>
       */
      public Builder clearDataName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dataName_ = getDefaultInstance().getDataName();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.protocol.Data)
    }

  }

  /**
   * Protobuf type {@code org.ftccommunity.simulator.net.protocol.DeviceListOld}
   */
  public  static final class DeviceListOld extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.protocol.DeviceListOld)
      DeviceListOldOrBuilder {
    public static final int TYPE_FIELD_NUMBER = 1;
    public static final int SERIALIZED_FIELD_NUMBER = 2;
    public static final com.google.protobuf.Parser<DeviceListOld> PARSER =
        new com.google.protobuf.AbstractParser<DeviceListOld>() {
      public DeviceListOld parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new DeviceListOld(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.protocol.DeviceListOld)
    private static final DeviceListOld DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new DeviceListOld();
    }

    private int bitField0_;
    private Type type_;
    private volatile Object serialized_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use DeviceListOld.newBuilder() to construct.
    private DeviceListOld(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }

    private DeviceListOld() {
      serialized_ = "";
    }
    private DeviceListOld(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              serialized_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_descriptor;
    }

    public static DeviceListOld parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DeviceListOld parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DeviceListOld parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DeviceListOld parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DeviceListOld parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static DeviceListOld parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static DeviceListOld parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static DeviceListOld parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static DeviceListOld parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static DeviceListOld parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(DeviceListOld prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static DeviceListOld getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DeviceListOld.class, Builder.class);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public Type getType() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public TypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>required string serialized = 2;</code>
     */
    public boolean hasSerialized() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>required string serialized = 2;</code>
     */
    public String getSerialized() {
      Object ref = serialized_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialized_ = s;
        }
        return s;
      }
    }

    /**
     * <code>required string serialized = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSerializedBytes() {
      Object ref = serialized_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serialized_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSerialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSerializedBytes());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSerializedBytes());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<DeviceListOld> getParserForType() {
      return PARSER;
    }

    public DeviceListOld getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.protocol.DeviceListOld}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.protocol.DeviceListOld)
        DeviceListOldOrBuilder {
      private int bitField0_;
      private Type type_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder> typeBuilder_;
      private Object serialized_ = "";
      // Construct using org.ftccommunity.simulator.net.protocol.SimulatorData.DeviceListOld.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceListOld.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        serialized_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceListOld_descriptor;
      }

      public DeviceListOld getDefaultInstanceForType() {
        return DeviceListOld.getDefaultInstance();
      }

      public DeviceListOld build() {
        DeviceListOld result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DeviceListOld buildPartial() {
        DeviceListOld result = new DeviceListOld(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serialized_ = serialized_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeviceListOld) {
          return mergeFrom((DeviceListOld)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DeviceListOld other) {
        if (other == DeviceListOld.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasSerialized()) {
          bitField0_ |= 0x00000002;
          serialized_ = other.serialized_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasSerialized()) {
          return false;
        }
        return getType().isInitialized();
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DeviceListOld parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DeviceListOld) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? Type.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(
          Type.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(Type value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder mergeType(Type value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              type_ != null &&
              type_ != Type.getDefaultInstance()) {
            type_ =
              Type.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public TypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              Type.getDefaultInstance() : type_;
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder>
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Type, Type.Builder, TypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      /**
       * <code>required string serialized = 2;</code>
       */
      public boolean hasSerialized() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string serialized = 2;</code>
       */
      public String getSerialized() {
        Object ref = serialized_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialized_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>required string serialized = 2;</code>
       */
      public Builder setSerialized(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serialized_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string serialized = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSerializedBytes() {
        Object ref = serialized_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serialized_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>required string serialized = 2;</code>
       */
      public Builder setSerializedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serialized_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string serialized = 2;</code>
       */
      public Builder clearSerialized() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serialized_ = getDefaultInstance().getSerialized();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.protocol.DeviceListOld)
    }

  }

  /**
   * Protobuf type {@code org.ftccommunity.simulator.net.protocol.DeviceList}
   */
  public  static final class DeviceList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.protocol.DeviceList)
      DeviceListOrBuilder {
    public static final int TYPE_FIELD_NUMBER = 1;
    public static final int BRICKS_FIELD_NUMBER = 2;
    public static final com.google.protobuf.Parser<DeviceList> PARSER =
        new com.google.protobuf.AbstractParser<DeviceList>() {
      public DeviceList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new DeviceList(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.protocol.DeviceList)
    private static final DeviceList DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new DeviceList();
    }

    private int bitField0_;
    private Type type_;
    private java.util.List<BrickInfo> bricks_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use DeviceList.newBuilder() to construct.
    private DeviceList(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }

    private DeviceList() {
      bricks_ = java.util.Collections.emptyList();
    }
    private DeviceList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                bricks_ = new java.util.ArrayList<BrickInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              bricks_.add(input.readMessage(BrickInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          bricks_ = java.util.Collections.unmodifiableList(bricks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_descriptor;
    }

    public static DeviceList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DeviceList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DeviceList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DeviceList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DeviceList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static DeviceList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static DeviceList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static DeviceList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static DeviceList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static DeviceList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(DeviceList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static DeviceList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DeviceList.class, Builder.class);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public Type getType() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public TypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    public java.util.List<BrickInfo> getBricksList() {
      return bricks_;
    }

    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    public java.util.List<? extends BrickInfoOrBuilder>
        getBricksOrBuilderList() {
      return bricks_;
    }

    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    public int getBricksCount() {
      return bricks_.size();
    }

    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    public BrickInfo getBricks(int index) {
      return bricks_.get(index);
    }

    /**
     * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
     */
    public BrickInfoOrBuilder getBricksOrBuilder(
        int index) {
      return bricks_.get(index);
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBricksCount(); i++) {
        if (!getBricks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getType());
      }
      for (int i = 0; i < bricks_.size(); i++) {
        output.writeMessage(2, bricks_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getType());
      }
      for (int i = 0; i < bricks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, bricks_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<DeviceList> getParserForType() {
      return PARSER;
    }

    public DeviceList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.protocol.DeviceList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.protocol.DeviceList)
        DeviceListOrBuilder {
      private int bitField0_;
      private Type type_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder> typeBuilder_;
      private java.util.List<BrickInfo> bricks_ =
        java.util.Collections.emptyList();
      private com.google.protobuf.RepeatedFieldBuilder<
          BrickInfo, BrickInfo.Builder, BrickInfoOrBuilder> bricksBuilder_;
      // Construct using org.ftccommunity.simulator.net.protocol.SimulatorData.DeviceList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceList.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
          getBricksFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (bricksBuilder_ == null) {
          bricks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          bricksBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_DeviceList_descriptor;
      }

      public DeviceList getDefaultInstanceForType() {
        return DeviceList.getDefaultInstance();
      }

      public DeviceList build() {
        DeviceList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DeviceList buildPartial() {
        DeviceList result = new DeviceList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (bricksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            bricks_ = java.util.Collections.unmodifiableList(bricks_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.bricks_ = bricks_;
        } else {
          result.bricks_ = bricksBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeviceList) {
          return mergeFrom((DeviceList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DeviceList other) {
        if (other == DeviceList.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (bricksBuilder_ == null) {
          if (!other.bricks_.isEmpty()) {
            if (bricks_.isEmpty()) {
              bricks_ = other.bricks_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBricksIsMutable();
              bricks_.addAll(other.bricks_);
            }
            onChanged();
          }
        } else {
          if (!other.bricks_.isEmpty()) {
            if (bricksBuilder_.isEmpty()) {
              bricksBuilder_.dispose();
              bricksBuilder_ = null;
              bricks_ = other.bricks_;
              bitField0_ = (bitField0_ & ~0x00000002);
              bricksBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBricksFieldBuilder() : null;
            } else {
              bricksBuilder_.addAllMessages(other.bricks_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!getType().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getBricksCount(); i++) {
          if (!getBricks(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DeviceList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DeviceList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? Type.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(
          Type.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(Type value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder mergeType(Type value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              type_ != null &&
              type_ != Type.getDefaultInstance()) {
            type_ =
              Type.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public TypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              Type.getDefaultInstance() : type_;
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder>
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Type, Type.Builder, TypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private void ensureBricksIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          bricks_ = new java.util.ArrayList<BrickInfo>(bricks_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public java.util.List<BrickInfo> getBricksList() {
        if (bricksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bricks_);
        } else {
          return bricksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public int getBricksCount() {
        if (bricksBuilder_ == null) {
          return bricks_.size();
        } else {
          return bricksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public BrickInfo getBricks(int index) {
        if (bricksBuilder_ == null) {
          return bricks_.get(index);
        } else {
          return bricksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder setBricks(
          int index, BrickInfo value) {
        if (bricksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBricksIsMutable();
          bricks_.set(index, value);
          onChanged();
        } else {
          bricksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder setBricks(
          int index, BrickInfo.Builder builderForValue) {
        if (bricksBuilder_ == null) {
          ensureBricksIsMutable();
          bricks_.set(index, builderForValue.build());
          onChanged();
        } else {
          bricksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder addBricks(BrickInfo value) {
        if (bricksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBricksIsMutable();
          bricks_.add(value);
          onChanged();
        } else {
          bricksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder addBricks(
          int index, BrickInfo value) {
        if (bricksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBricksIsMutable();
          bricks_.add(index, value);
          onChanged();
        } else {
          bricksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder addBricks(
          BrickInfo.Builder builderForValue) {
        if (bricksBuilder_ == null) {
          ensureBricksIsMutable();
          bricks_.add(builderForValue.build());
          onChanged();
        } else {
          bricksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder addBricks(
          int index, BrickInfo.Builder builderForValue) {
        if (bricksBuilder_ == null) {
          ensureBricksIsMutable();
          bricks_.add(index, builderForValue.build());
          onChanged();
        } else {
          bricksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder addAllBricks(
          Iterable<? extends BrickInfo> values) {
        if (bricksBuilder_ == null) {
          ensureBricksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bricks_);
          onChanged();
        } else {
          bricksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder clearBricks() {
        if (bricksBuilder_ == null) {
          bricks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          bricksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public Builder removeBricks(int index) {
        if (bricksBuilder_ == null) {
          ensureBricksIsMutable();
          bricks_.remove(index);
          onChanged();
        } else {
          bricksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public BrickInfo.Builder getBricksBuilder(
          int index) {
        return getBricksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public BrickInfoOrBuilder getBricksOrBuilder(
          int index) {
        if (bricksBuilder_ == null) {
          return bricks_.get(index);  } else {
          return bricksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public java.util.List<? extends BrickInfoOrBuilder>
           getBricksOrBuilderList() {
        if (bricksBuilder_ != null) {
          return bricksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bricks_);
        }
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public BrickInfo.Builder addBricksBuilder() {
        return getBricksFieldBuilder().addBuilder(
            BrickInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public BrickInfo.Builder addBricksBuilder(
          int index) {
        return getBricksFieldBuilder().addBuilder(
            index, BrickInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .org.ftccommunity.simulator.net.protocol.BrickInfo bricks = 2;</code>
       */
      public java.util.List<BrickInfo.Builder>
           getBricksBuilderList() {
        return getBricksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          BrickInfo, BrickInfo.Builder, BrickInfoOrBuilder>
          getBricksFieldBuilder() {
        if (bricksBuilder_ == null) {
          bricksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              BrickInfo, BrickInfo.Builder, BrickInfoOrBuilder>(
                  bricks_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          bricks_ = null;
        }
        return bricksBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.protocol.DeviceList)
    }

  }

  /**
   * Protobuf type {@code org.ftccommunity.simulator.net.protocol.BrickInfo}
   */
  public  static final class BrickInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.protocol.BrickInfo)
      BrickInfoOrBuilder {
    public static final int TYPE_FIELD_NUMBER = 1;
    public static final int ALIAS_FIELD_NUMBER = 2;
    public static final int SERIAL_FIELD_NUMBER = 3;
    public static final com.google.protobuf.Parser<BrickInfo> PARSER =
        new com.google.protobuf.AbstractParser<BrickInfo>() {
      public BrickInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new BrickInfo(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.protocol.BrickInfo)
    private static final BrickInfo DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new BrickInfo();
    }

    private int bitField0_;
    private Type type_;
    private volatile Object alias_;
    private volatile Object serial_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use BrickInfo.newBuilder() to construct.
    private BrickInfo(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private BrickInfo() {
      alias_ = "";
      serial_ = "";
    }
    private BrickInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              alias_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              serial_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_descriptor;
    }

    public static BrickInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static BrickInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static BrickInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static BrickInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static BrickInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static BrickInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static BrickInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static BrickInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static BrickInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static BrickInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(BrickInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static BrickInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BrickInfo.class, Builder.class);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public Type getType() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
     */
    public TypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? Type.getDefaultInstance() : type_;
    }

    /**
     * <code>optional string alias = 2;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>optional string alias = 2;</code>
     */
    public String getAlias() {
      Object ref = alias_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string alias = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      Object ref = alias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>optional string serial = 3;</code>
     */
    public boolean hasSerial() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional string serial = 3;</code>
     */
    public String getSerial() {
      Object ref = serial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serial_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string serial = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSerialBytes() {
      Object ref = serial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAliasBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSerialBytes());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAliasBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSerialBytes());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<BrickInfo> getParserForType() {
      return PARSER;
    }

    public BrickInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.protocol.BrickInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.protocol.BrickInfo)
        BrickInfoOrBuilder {
      private int bitField0_;
      private Type type_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder> typeBuilder_;
      private Object alias_ = "";
      private Object serial_ = "";
      // Construct using org.ftccommunity.simulator.net.protocol.SimulatorData.BrickInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BrickInfo.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        serial_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_BrickInfo_descriptor;
      }

      public BrickInfo getDefaultInstanceForType() {
        return BrickInfo.getDefaultInstance();
      }

      public BrickInfo build() {
        BrickInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BrickInfo buildPartial() {
        BrickInfo result = new BrickInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serial_ = serial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BrickInfo) {
          return mergeFrom((BrickInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BrickInfo other) {
        if (other == BrickInfo.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasAlias()) {
          bitField0_ |= 0x00000002;
          alias_ = other.alias_;
          onChanged();
        }
        if (other.hasSerial()) {
          bitField0_ |= 0x00000004;
          serial_ = other.serial_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        return getType().isInitialized();
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BrickInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BrickInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? Type.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(
          Type.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder setType(Type value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder mergeType(Type value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              type_ != null &&
              type_ != Type.getDefaultInstance()) {
            type_ =
              Type.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public Type.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      public TypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              Type.getDefaultInstance() : type_;
        }
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Type, Type.Builder, TypeOrBuilder>
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Type, Type.Builder, TypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      /**
       * <code>optional string alias = 2;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>optional string alias = 2;</code>
       */
      public String getAlias() {
        Object ref = alias_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            alias_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>optional string alias = 2;</code>
       */
      public Builder setAlias(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        alias_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string alias = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string alias = 2;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        alias_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string alias = 2;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }

      /**
       * <code>optional string serial = 3;</code>
       */
      public boolean hasSerial() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string serial = 3;</code>
       */
      public String getSerial() {
        Object ref = serial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serial_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>optional string serial = 3;</code>
       */
      public Builder setSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serial_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string serial = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSerialBytes() {
        Object ref = serial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string serial = 3;</code>
       */
      public Builder setSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serial_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string serial = 3;</code>
       */
      public Builder clearSerial() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serial_ = getDefaultInstance().getSerial();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.protocol.BrickInfo)
    }

  }

  /**
   * Protobuf type {@code org.ftccommunity.simulator.net.protocol.Type}
   */
  public  static final class Type extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.protocol.Type)
      TypeOrBuilder {
    public static final int TYPE_FIELD_NUMBER = 1;
    public static final com.google.protobuf.Parser<Type> PARSER =
        new com.google.protobuf.AbstractParser<Type>() {
      public Type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Type(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.protocol.Type)
    private static final Type DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new Type();
    }

    private int bitField0_;
    private int type_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use Type.newBuilder() to construct.
    private Type(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Type() {
      type_ = 1;
    }
    private Type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              Types value = Types.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Type_descriptor;
    }

    public static Type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static Type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static Type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static Type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static Type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(Type prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static Type getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Type.class, Builder.class);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
     */
    public Types getType() {
      Types result = Types.valueOf(type_);
      return result == null ? Types.NONE : result;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<Type> getParserForType() {
      return PARSER;
    }

    public Type getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * Protobuf enum {@code org.ftccommunity.simulator.net.protocol.Type.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 1;</code>
       *
       * <pre>
       * Pritory values take the range 1-16
       * </pre>
       */
      NONE(0, 1),
      /**
       * <code>LEGACY_MOTOR = 2;</code>
       */
      LEGACY_MOTOR(1, 2),
      /**
       * <code>LEGACY_SERVO = 3;</code>
       */
      LEGACY_SERVO(2, 3),
      /**
       * <code>LEGACY_LIGHT = 4;</code>
       */
      LEGACY_LIGHT(3, 4),
      /**
       * <code>LEGACY_TOUCH = 5;</code>
       */
      LEGACY_TOUCH(4, 5),
      /**
       * <code>LEGACY_IR = 6;</code>
       */
      LEGACY_IR(5, 6),
      /**
       * <code>USB_MOTOR = 7;</code>
       */
      USB_MOTOR(6, 7),
      /**
       * <code>USB_SERVO = 8;</code>
       */
      USB_SERVO(7, 8),
      /**
       * <code>SENSOR_IR = 9;</code>
       */
      SENSOR_IR(8, 9),
      /**
       * <code>SENSOR_OPT_DIST = 10;</code>
       */
      SENSOR_OPT_DIST(9, 10),
      /**
       * <code>SENSOR_TOUCH = 11;</code>
       */
      SENSOR_TOUCH(10, 11),
      /**
       * <code>DEVICE_LIST = 12;</code>
       */
      DEVICE_LIST(11, 12),
      /**
       * <code>BRICK_INFO = 13;</code>
       */
      BRICK_INFO(12, 13),
      /**
       * <code>HEARTBEAT = 14;</code>
       */
      HEARTBEAT(13, 14),
      /**
       * <code>LEGACY_TILT_ACCL = 15;</code>
       */
      LEGACY_TILT_ACCL(14, 15),
      /**
       * <code>LEGACY_COLOR = 16;</code>
       */
      LEGACY_COLOR(15, 16),
      /**
       * <code>LEGACY_EOPD = 17;</code>
       */
      LEGACY_EOPD(16, 17),
      /**
       * <code>LEGACY_FORCE = 18;</code>
       */
      LEGACY_FORCE(17, 18),
      /**
       * <code>LEGACY_GYRO = 19;</code>
       */
      LEGACY_GYRO(18, 19),
      /**
       * <code>SIM_DATA = 20;</code>
       */
      SIM_DATA(19, 20),
      /**
       * <code>OPT_DATA1 = 21;</code>
       */
      OPT_DATA1(20, 21),
      /**
       * <code>OPT_DATA2 = 22;</code>
       */
      OPT_DATA2(21, 22),
      /**
       * <code>OPT_DATA3 = 23;</code>
       */
      OPT_DATA3(22, 23),
      /**
       * <code>OPT_DATA4 = 24;</code>
       */
      OPT_DATA4(23, 24),
      ;

      /**
       * <code>NONE = 1;</code>
       *
       * <pre>
       * Pritory values take the range 1-16
       * </pre>
       */
      public static final int NONE_VALUE = 1;
      /**
       * <code>LEGACY_MOTOR = 2;</code>
       */
      public static final int LEGACY_MOTOR_VALUE = 2;
      /**
       * <code>LEGACY_SERVO = 3;</code>
       */
      public static final int LEGACY_SERVO_VALUE = 3;
      /**
       * <code>LEGACY_LIGHT = 4;</code>
       */
      public static final int LEGACY_LIGHT_VALUE = 4;
      /**
       * <code>LEGACY_TOUCH = 5;</code>
       */
      public static final int LEGACY_TOUCH_VALUE = 5;
      /**
       * <code>LEGACY_IR = 6;</code>
       */
      public static final int LEGACY_IR_VALUE = 6;
      /**
       * <code>USB_MOTOR = 7;</code>
       */
      public static final int USB_MOTOR_VALUE = 7;
      /**
       * <code>USB_SERVO = 8;</code>
       */
      public static final int USB_SERVO_VALUE = 8;
      /**
       * <code>SENSOR_IR = 9;</code>
       */
      public static final int SENSOR_IR_VALUE = 9;
      /**
       * <code>SENSOR_OPT_DIST = 10;</code>
       */
      public static final int SENSOR_OPT_DIST_VALUE = 10;
      /**
       * <code>SENSOR_TOUCH = 11;</code>
       */
      public static final int SENSOR_TOUCH_VALUE = 11;
      /**
       * <code>DEVICE_LIST = 12;</code>
       */
      public static final int DEVICE_LIST_VALUE = 12;
      /**
       * <code>BRICK_INFO = 13;</code>
       */
      public static final int BRICK_INFO_VALUE = 13;
      /**
       * <code>HEARTBEAT = 14;</code>
       */
      public static final int HEARTBEAT_VALUE = 14;
      /**
       * <code>LEGACY_TILT_ACCL = 15;</code>
       */
      public static final int LEGACY_TILT_ACCL_VALUE = 15;
      /**
       * <code>LEGACY_COLOR = 16;</code>
       */
      public static final int LEGACY_COLOR_VALUE = 16;
      /**
       * <code>LEGACY_EOPD = 17;</code>
       */
      public static final int LEGACY_EOPD_VALUE = 17;
      /**
       * <code>LEGACY_FORCE = 18;</code>
       */
      public static final int LEGACY_FORCE_VALUE = 18;
      /**
       * <code>LEGACY_GYRO = 19;</code>
       */
      public static final int LEGACY_GYRO_VALUE = 19;
      /**
       * <code>SIM_DATA = 20;</code>
       */
      public static final int SIM_DATA_VALUE = 20;
      /**
       * <code>OPT_DATA1 = 21;</code>
       */
      public static final int OPT_DATA1_VALUE = 21;
      /**
       * <code>OPT_DATA2 = 22;</code>
       */
      public static final int OPT_DATA2_VALUE = 22;
      /**
       * <code>OPT_DATA3 = 23;</code>
       */
      public static final int OPT_DATA3_VALUE = 23;
      /**
       * <code>OPT_DATA4 = 24;</code>
       */
      public static final int OPT_DATA4_VALUE = 24;
      private static final Types[] VALUES = values();
      private static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.valueOf(number);
              }
            };
      private final int index;
      private final int value;

      Types(int index, int value) {
        this.index = index;
        this.value = value;
      }

      public static Types valueOf(int value) {
        switch (value) {
          case 1: return NONE;
          case 2: return LEGACY_MOTOR;
          case 3: return LEGACY_SERVO;
          case 4: return LEGACY_LIGHT;
          case 5: return LEGACY_TOUCH;
          case 6: return LEGACY_IR;
          case 7: return USB_MOTOR;
          case 8: return USB_SERVO;
          case 9: return SENSOR_IR;
          case 10: return SENSOR_OPT_DIST;
          case 11: return SENSOR_TOUCH;
          case 12: return DEVICE_LIST;
          case 13: return BRICK_INFO;
          case 14: return HEARTBEAT;
          case 15: return LEGACY_TILT_ACCL;
          case 16: return LEGACY_COLOR;
          case 17: return LEGACY_EOPD;
          case 18: return LEGACY_FORCE;
          case 19: return LEGACY_GYRO;
          case 20: return SIM_DATA;
          case 21: return OPT_DATA1;
          case 22: return OPT_DATA2;
          case 23: return OPT_DATA3;
          case 24: return OPT_DATA4;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Type.getDescriptor().getEnumTypes().get(0);
      }

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      public final int getNumber() {
        return value;
      }

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      // @@protoc_insertion_point(enum_scope:org.ftccommunity.simulator.net.protocol.Type.Types)
    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.protocol.Type}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.protocol.Type)
        TypeOrBuilder {
      private int bitField0_;
      private int type_ = 1;

      // Construct using org.ftccommunity.simulator.net.protocol.SimulatorData.Type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Type_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Type.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SimulatorData.internal_static_org_ftccommunity_simulator_net_protocol_Type_descriptor;
      }

      public Type getDefaultInstanceForType() {
        return Type.getDefaultInstance();
      }

      public Type build() {
        Type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Type buildPartial() {
        Type result = new Type(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Type) {
          return mergeFrom((Type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Type other) {
        if (other == Type.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return hasType();
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Type) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
       */
      public Types getType() {
        Types result = Types.valueOf(type_);
        return result == null ? Types.NONE : result;
      }
      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
       */
      public Builder setType(Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .org.ftccommunity.simulator.net.protocol.Type.Types type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.protocol.Type)
    }

  }

  // @@protoc_insertion_point(outer_class_scope)
}
