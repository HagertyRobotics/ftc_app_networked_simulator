// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Data.proto

package org.ftccommunity.simulator.net;

public final class SimulatorData {
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_org_ftccommunity_simulator_net_Data_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_org_ftccommunity_simulator_net_Data_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_org_ftccommunity_simulator_net_DeviceListOld_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_org_ftccommunity_simulator_net_DeviceListOld_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_org_ftccommunity_simulator_net_DeviceList_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_org_ftccommunity_simulator_net_DeviceList_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_org_ftccommunity_simulator_net_BrickInfo_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_org_ftccommunity_simulator_net_BrickInfo_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_org_ftccommunity_simulator_net_Type_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_org_ftccommunity_simulator_net_Type_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\nData.proto\022\036org.ftccommunity.simulator" +
                        ".net\"\362\001\n\004Data\0222\n\004type\030\001 \002(\0132$.org.ftccom" +
                        "munity.simulator.net.Type\022<\n\006module\030\002 \002(" +
                        "\0162,.org.ftccommunity.simulator.net.Data." +
                        "Modules\022\014\n\004info\030\003 \003(\t\022\017\n\004port\030\004 \001(\005:\0011\022\022" +
                        "\n\010dataName\030\005 \001(\t:\000\"E\n\007Modules\022\025\n\021LEGACY_" +
                        "CONTROLLER\020\001\022\020\n\014LEGACY_MOTOR\020\002\022\021\n\rLEGACY" +
                        "_SENSOR\020\003\"W\n\rDeviceListOld\0222\n\004type\030\001 \002(\013" +
                        "2$.org.ftccommunity.simulator.net.Type\022\022" +
                        "\n\nserialized\030\002 \002(\t\"{\n\nDeviceList\0222\n\004type",
                "\030\001 \002(\0132$.org.ftccommunity.simulator.net." +
                        "Type\0229\n\006bricks\030\002 \003(\0132).org.ftccommunity." +
                        "simulator.net.BrickInfo\"^\n\tBrickInfo\0222\n\004" +
                        "type\030\001 \002(\0132$.org.ftccommunity.simulator." +
                        "net.Type\022\r\n\005alias\030\002 \001(\t\022\016\n\006serial\030\003 \001(\t\"" +
                        "\365\001\n\004Type\0228\n\004type\030\001 \002(\0162*.org.ftccommunit" +
                        "y.simulator.net.Type.Types\"\262\001\n\005Types\022\010\n\004" +
                        "NONE\020\001\022\020\n\014LEGACY_MOTOR\020\002\022\020\n\014LEGACY_LIGHT" +
                        "\020\003\022\020\n\014LEGACY_TOUCH\020\004\022\r\n\tUSB_MOTOR\020\005\022\r\n\tU" +
                        "SB_SERVO\020\006\022\017\n\013DEVICE_LIST\020\007\022\016\n\nBRICK_INF",
                "O\020\010\022\014\n\010SIM_DATA\020\t\022\r\n\tOPT_DATA1\020\n\022\r\n\tOPT_" +
                        "DATA2\020\013B/\n\036org.ftccommunity.simulator.ne" +
                        "tB\rSimulatorData"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_org_ftccommunity_simulator_net_Data_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_org_ftccommunity_simulator_net_Data_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_org_ftccommunity_simulator_net_Data_descriptor,
                new String[]{"Type", "Module", "Info", "Port", "DataName",});
        internal_static_org_ftccommunity_simulator_net_DeviceListOld_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_org_ftccommunity_simulator_net_DeviceListOld_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_org_ftccommunity_simulator_net_DeviceListOld_descriptor,
                new String[]{"Type", "Serialized",});
        internal_static_org_ftccommunity_simulator_net_DeviceList_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_org_ftccommunity_simulator_net_DeviceList_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_org_ftccommunity_simulator_net_DeviceList_descriptor,
                new String[]{"Type", "Bricks",});
        internal_static_org_ftccommunity_simulator_net_BrickInfo_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_org_ftccommunity_simulator_net_BrickInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_org_ftccommunity_simulator_net_BrickInfo_descriptor,
                new String[]{"Type", "Alias", "Serial",});
        internal_static_org_ftccommunity_simulator_net_Type_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_org_ftccommunity_simulator_net_Type_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_org_ftccommunity_simulator_net_Type_descriptor,
                new String[]{"Type",});
    }

    private SimulatorData() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface DataOrBuilder extends
            // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.Data)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        boolean hasType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.Type getType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder();

        /**
         * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
         */
        boolean hasModule();

        /**
         * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.Data.Modules getModule();

        /**
         * <code>repeated string info = 3;</code>
         */
        com.google.protobuf.ProtocolStringList
        getInfoList();

        /**
         * <code>repeated string info = 3;</code>
         */
        int getInfoCount();

        /**
         * <code>repeated string info = 3;</code>
         */
        String getInfo(int index);

        /**
         * <code>repeated string info = 3;</code>
         */
        com.google.protobuf.ByteString
        getInfoBytes(int index);

        /**
         * <code>optional int32 port = 4 [default = 1];</code>
         */
        boolean hasPort();

        /**
         * <code>optional int32 port = 4 [default = 1];</code>
         */
        int getPort();

        /**
         * <code>optional string dataName = 5 [default = ""];</code>
         */
        boolean hasDataName();

        /**
         * <code>optional string dataName = 5 [default = ""];</code>
         */
        String getDataName();

        /**
         * <code>optional string dataName = 5 [default = ""];</code>
         */
        com.google.protobuf.ByteString
        getDataNameBytes();
    }

    public interface DeviceListOldOrBuilder extends
            // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.DeviceListOld)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        boolean hasType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.Type getType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder();

        /**
         * <code>required string serialized = 2;</code>
         */
        boolean hasSerialized();

        /**
         * <code>required string serialized = 2;</code>
         */
        String getSerialized();

        /**
         * <code>required string serialized = 2;</code>
         */
        com.google.protobuf.ByteString
        getSerializedBytes();
    }

    public interface DeviceListOrBuilder extends
            // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.DeviceList)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        boolean hasType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.Type getType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder();

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        java.util.List<org.ftccommunity.simulator.net.SimulatorData.BrickInfo>
        getBricksList();

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.BrickInfo getBricks(int index);

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        int getBricksCount();

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        java.util.List<? extends org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder>
        getBricksOrBuilderList();

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder getBricksOrBuilder(
                int index);
    }

    public interface BrickInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.BrickInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        boolean hasType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.Type getType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder();

        /**
         * <code>optional string alias = 2;</code>
         */
        boolean hasAlias();

        /**
         * <code>optional string alias = 2;</code>
         */
        String getAlias();

        /**
         * <code>optional string alias = 2;</code>
         */
        com.google.protobuf.ByteString
        getAliasBytes();

        /**
         * <code>optional string serial = 3;</code>
         */
        boolean hasSerial();

        /**
         * <code>optional string serial = 3;</code>
         */
        String getSerial();

        /**
         * <code>optional string serial = 3;</code>
         */
        com.google.protobuf.ByteString
        getSerialBytes();
    }

    public interface TypeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:org.ftccommunity.simulator.net.Type)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
         */
        boolean hasType();

        /**
         * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
         */
        org.ftccommunity.simulator.net.SimulatorData.Type.Types getType();
    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.Data}
     */
    public static final class Data extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.Data)
            DataOrBuilder {
        public static final int TYPE_FIELD_NUMBER = 1;
        public static final int MODULE_FIELD_NUMBER = 2;
        public static final int INFO_FIELD_NUMBER = 3;
        public static final int PORT_FIELD_NUMBER = 4;
        public static final int DATANAME_FIELD_NUMBER = 5;
        public static final com.google.protobuf.Parser<Data> PARSER =
                new com.google.protobuf.AbstractParser<Data>() {
                    public Data parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new Data(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.Data)
        private static final org.ftccommunity.simulator.net.SimulatorData.Data DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.ftccommunity.simulator.net.SimulatorData.Data();
        }

        private int bitField0_;
        private org.ftccommunity.simulator.net.SimulatorData.Type type_;
        private int module_;
        private com.google.protobuf.LazyStringList info_;
        private int port_;
        private volatile Object dataName_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use Data.newBuilder() to construct.
        private Data(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private Data() {
            module_ = 1;
            info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            port_ = 1;
            dataName_ = "";
        }

        private Data(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            org.ftccommunity.simulator.net.SimulatorData.Type.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = type_.toBuilder();
                            }
                            type_ = input.readMessage(org.ftccommunity.simulator.net.SimulatorData.Type.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(type_);
                                type_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            org.ftccommunity.simulator.net.SimulatorData.Data.Modules value = org.ftccommunity.simulator.net.SimulatorData.Data.Modules.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                module_ = rawValue;
                            }
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                info_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            info_.add(bs);
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000004;
                            port_ = input.readInt32();
                            break;
                        }
                        case 42: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000008;
                            dataName_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this));
            } finally {
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    info_ = info_.getUnmodifiableView();
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Data_descriptor;
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.ftccommunity.simulator.net.SimulatorData.Data prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Data getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Data_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.ftccommunity.simulator.net.SimulatorData.Data.class, org.ftccommunity.simulator.net.SimulatorData.Data.Builder.class);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
         */
        public boolean hasModule() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.Data.Modules getModule() {
            org.ftccommunity.simulator.net.SimulatorData.Data.Modules result = org.ftccommunity.simulator.net.SimulatorData.Data.Modules.valueOf(module_);
            return result == null ? org.ftccommunity.simulator.net.SimulatorData.Data.Modules.LEGACY_CONTROLLER : result;
        }

        /**
         * <code>repeated string info = 3;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getInfoList() {
            return info_;
        }

        /**
         * <code>repeated string info = 3;</code>
         */
        public int getInfoCount() {
            return info_.size();
        }

        /**
         * <code>repeated string info = 3;</code>
         */
        public String getInfo(int index) {
            return info_.get(index);
        }

        /**
         * <code>repeated string info = 3;</code>
         */
        public com.google.protobuf.ByteString
        getInfoBytes(int index) {
            return info_.getByteString(index);
        }

        /**
         * <code>optional int32 port = 4 [default = 1];</code>
         */
        public boolean hasPort() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional int32 port = 4 [default = 1];</code>
         */
        public int getPort() {
            return port_;
        }

        /**
         * <code>optional string dataName = 5 [default = ""];</code>
         */
        public boolean hasDataName() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional string dataName = 5 [default = ""];</code>
         */
        public String getDataName() {
            Object ref = dataName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    dataName_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string dataName = 5 [default = ""];</code>
         */
        public com.google.protobuf.ByteString
        getDataNameBytes() {
            Object ref = dataName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                dataName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasModule()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getType().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, getType());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, module_);
            }
            for (int i = 0; i < info_.size(); i++) {
                output.writeBytes(3, info_.getByteString(i));
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(4, port_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeBytes(5, getDataNameBytes());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getType());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, module_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < info_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(info_.getByteString(i));
                }
                size += dataSize;
                size += 1 * getInfoList().size();
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(4, port_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(5, getDataNameBytes());
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<Data> getParserForType() {
            return PARSER;
        }

        public org.ftccommunity.simulator.net.SimulatorData.Data getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code org.ftccommunity.simulator.net.Data.Modules}
         */
        public enum Modules
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>LEGACY_CONTROLLER = 1;</code>
             */
            LEGACY_CONTROLLER(0, 1),
            /**
             * <code>LEGACY_MOTOR = 2;</code>
             */
            LEGACY_MOTOR(1, 2),
            /**
             * <code>LEGACY_SENSOR = 3;</code>
             */
            LEGACY_SENSOR(2, 3),;

            /**
             * <code>LEGACY_CONTROLLER = 1;</code>
             */
            public static final int LEGACY_CONTROLLER_VALUE = 1;
            /**
             * <code>LEGACY_MOTOR = 2;</code>
             */
            public static final int LEGACY_MOTOR_VALUE = 2;
            /**
             * <code>LEGACY_SENSOR = 3;</code>
             */
            public static final int LEGACY_SENSOR_VALUE = 3;
            private static final Modules[] VALUES = values();
            private static com.google.protobuf.Internal.EnumLiteMap<Modules>
                    internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Modules>() {
                        public Modules findValueByNumber(int number) {
                            return Modules.valueOf(number);
                        }
                    };
            private final int index;
            private final int value;

            private Modules(int index, int value) {
                this.index = index;
                this.value = value;
            }

            public static Modules valueOf(int value) {
                switch (value) {
                    case 1:
                        return LEGACY_CONTROLLER;
                    case 2:
                        return LEGACY_MOTOR;
                    case 3:
                        return LEGACY_SENSOR;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Modules>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.Data.getDescriptor().getEnumTypes().get(0);
            }

            public static Modules valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:org.ftccommunity.simulator.net.Data.Modules)
        }

        /**
         * Protobuf type {@code org.ftccommunity.simulator.net.Data}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.Data)
                org.ftccommunity.simulator.net.SimulatorData.DataOrBuilder {
            private int bitField0_;
            private org.ftccommunity.simulator.net.SimulatorData.Type type_ = null;
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder> typeBuilder_;
            private int module_ = 1;
            private com.google.protobuf.LazyStringList info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            private int port_ = 1;
            private Object dataName_ = "";

            // Construct using org.ftccommunity.simulator.net.SimulatorData.Data.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Data_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Data_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.ftccommunity.simulator.net.SimulatorData.Data.class, org.ftccommunity.simulator.net.SimulatorData.Data.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getTypeFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (typeBuilder_ == null) {
                    type_ = null;
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                module_ = 1;
                bitField0_ = (bitField0_ & ~0x00000002);
                info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                port_ = 1;
                bitField0_ = (bitField0_ & ~0x00000008);
                dataName_ = "";
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Data_descriptor;
            }

            public org.ftccommunity.simulator.net.SimulatorData.Data getDefaultInstanceForType() {
                return org.ftccommunity.simulator.net.SimulatorData.Data.getDefaultInstance();
            }

            public org.ftccommunity.simulator.net.SimulatorData.Data build() {
                org.ftccommunity.simulator.net.SimulatorData.Data result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.ftccommunity.simulator.net.SimulatorData.Data buildPartial() {
                org.ftccommunity.simulator.net.SimulatorData.Data result = new org.ftccommunity.simulator.net.SimulatorData.Data(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (typeBuilder_ == null) {
                    result.type_ = type_;
                } else {
                    result.type_ = typeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.module_ = module_;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    info_ = info_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.info_ = info_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.port_ = port_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.dataName_ = dataName_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.ftccommunity.simulator.net.SimulatorData.Data) {
                    return mergeFrom((org.ftccommunity.simulator.net.SimulatorData.Data) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.ftccommunity.simulator.net.SimulatorData.Data other) {
                if (other == org.ftccommunity.simulator.net.SimulatorData.Data.getDefaultInstance())
                    return this;
                if (other.hasType()) {
                    mergeType(other.getType());
                }
                if (other.hasModule()) {
                    setModule(other.getModule());
                }
                if (!other.info_.isEmpty()) {
                    if (info_.isEmpty()) {
                        info_ = other.info_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureInfoIsMutable();
                        info_.addAll(other.info_);
                    }
                    onChanged();
                }
                if (other.hasPort()) {
                    setPort(other.getPort());
                }
                if (other.hasDataName()) {
                    bitField0_ |= 0x00000010;
                    dataName_ = other.dataName_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {
                    return false;
                }
                if (!hasModule()) {
                    return false;
                }
                if (!getType().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.ftccommunity.simulator.net.SimulatorData.Data parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.ftccommunity.simulator.net.SimulatorData.Data) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
                if (typeBuilder_ == null) {
                    return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                } else {
                    return typeBuilder_.getMessage();
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(
                    org.ftccommunity.simulator.net.SimulatorData.Type.Builder builderForValue) {
                if (typeBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    typeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    typeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder mergeType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            type_ != null &&
                            type_ != org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance()) {
                        type_ =
                                org.ftccommunity.simulator.net.SimulatorData.Type.newBuilder(type_).mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    typeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder clearType() {
                if (typeBuilder_ == null) {
                    type_ = null;
                    onChanged();
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type.Builder getTypeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getTypeFieldBuilder().getBuilder();
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
                if (typeBuilder_ != null) {
                    return typeBuilder_.getMessageOrBuilder();
                } else {
                    return type_ == null ?
                            org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>
            getTypeFieldBuilder() {
                if (typeBuilder_ == null) {
                    typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>(
                            getType(),
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                return typeBuilder_;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
             */
            public boolean hasModule() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Data.Modules getModule() {
                org.ftccommunity.simulator.net.SimulatorData.Data.Modules result = org.ftccommunity.simulator.net.SimulatorData.Data.Modules.valueOf(module_);
                return result == null ? org.ftccommunity.simulator.net.SimulatorData.Data.Modules.LEGACY_CONTROLLER : result;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
             */
            public Builder setModule(org.ftccommunity.simulator.net.SimulatorData.Data.Modules value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                module_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Data.Modules module = 2;</code>
             */
            public Builder clearModule() {
                bitField0_ = (bitField0_ & ~0x00000002);
                module_ = 1;
                onChanged();
                return this;
            }

            private void ensureInfoIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    info_ = new com.google.protobuf.LazyStringArrayList(info_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getInfoList() {
                return info_.getUnmodifiableView();
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public int getInfoCount() {
                return info_.size();
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public String getInfo(int index) {
                return info_.get(index);
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public com.google.protobuf.ByteString
            getInfoBytes(int index) {
                return info_.getByteString(index);
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public Builder setInfo(
                    int index, String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInfoIsMutable();
                info_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public Builder addInfo(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInfoIsMutable();
                info_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public Builder addAllInfo(
                    Iterable<String> values) {
                ensureInfoIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, info_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public Builder clearInfo() {
                info_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string info = 3;</code>
             */
            public Builder addInfoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInfoIsMutable();
                info_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>optional int32 port = 4 [default = 1];</code>
             */
            public boolean hasPort() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional int32 port = 4 [default = 1];</code>
             */
            public int getPort() {
                return port_;
            }

            /**
             * <code>optional int32 port = 4 [default = 1];</code>
             */
            public Builder setPort(int value) {
                bitField0_ |= 0x00000008;
                port_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional int32 port = 4 [default = 1];</code>
             */
            public Builder clearPort() {
                bitField0_ = (bitField0_ & ~0x00000008);
                port_ = 1;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dataName = 5 [default = ""];</code>
             */
            public boolean hasDataName() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional string dataName = 5 [default = ""];</code>
             */
            public String getDataName() {
                Object ref = dataName_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        dataName_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string dataName = 5 [default = ""];</code>
             */
            public Builder setDataName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                dataName_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dataName = 5 [default = ""];</code>
             */
            public com.google.protobuf.ByteString
            getDataNameBytes() {
                Object ref = dataName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    dataName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string dataName = 5 [default = ""];</code>
             */
            public Builder setDataNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                dataName_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dataName = 5 [default = ""];</code>
             */
            public Builder clearDataName() {
                bitField0_ = (bitField0_ & ~0x00000010);
                dataName_ = getDefaultInstance().getDataName();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.Data)
        }

    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.DeviceListOld}
     */
    public static final class DeviceListOld extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.DeviceListOld)
            DeviceListOldOrBuilder {
        public static final int TYPE_FIELD_NUMBER = 1;
        public static final int SERIALIZED_FIELD_NUMBER = 2;
        public static final com.google.protobuf.Parser<DeviceListOld> PARSER =
                new com.google.protobuf.AbstractParser<DeviceListOld>() {
                    public DeviceListOld parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new DeviceListOld(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.DeviceListOld)
        private static final org.ftccommunity.simulator.net.SimulatorData.DeviceListOld DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.ftccommunity.simulator.net.SimulatorData.DeviceListOld();
        }

        private int bitField0_;
        private org.ftccommunity.simulator.net.SimulatorData.Type type_;
        private volatile Object serialized_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use DeviceListOld.newBuilder() to construct.
        private DeviceListOld(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private DeviceListOld() {
            serialized_ = "";
        }

        private DeviceListOld(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            org.ftccommunity.simulator.net.SimulatorData.Type.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = type_.toBuilder();
                            }
                            type_ = input.readMessage(org.ftccommunity.simulator.net.SimulatorData.Type.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(type_);
                                type_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            serialized_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this));
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceListOld_descriptor;
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.ftccommunity.simulator.net.SimulatorData.DeviceListOld prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceListOld getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceListOld_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.class, org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.Builder.class);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>required string serialized = 2;</code>
         */
        public boolean hasSerialized() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required string serialized = 2;</code>
         */
        public String getSerialized() {
            Object ref = serialized_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    serialized_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string serialized = 2;</code>
         */
        public com.google.protobuf.ByteString
        getSerializedBytes() {
            Object ref = serialized_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                serialized_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSerialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getType().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, getType());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getSerializedBytes());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getType());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getSerializedBytes());
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<DeviceListOld> getParserForType() {
            return PARSER;
        }

        public org.ftccommunity.simulator.net.SimulatorData.DeviceListOld getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code org.ftccommunity.simulator.net.DeviceListOld}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.DeviceListOld)
                org.ftccommunity.simulator.net.SimulatorData.DeviceListOldOrBuilder {
            private int bitField0_;
            private org.ftccommunity.simulator.net.SimulatorData.Type type_ = null;
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder> typeBuilder_;
            private Object serialized_ = "";

            // Construct using org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceListOld_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceListOld_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.class, org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getTypeFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (typeBuilder_ == null) {
                    type_ = null;
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                serialized_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceListOld_descriptor;
            }

            public org.ftccommunity.simulator.net.SimulatorData.DeviceListOld getDefaultInstanceForType() {
                return org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.getDefaultInstance();
            }

            public org.ftccommunity.simulator.net.SimulatorData.DeviceListOld build() {
                org.ftccommunity.simulator.net.SimulatorData.DeviceListOld result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.ftccommunity.simulator.net.SimulatorData.DeviceListOld buildPartial() {
                org.ftccommunity.simulator.net.SimulatorData.DeviceListOld result = new org.ftccommunity.simulator.net.SimulatorData.DeviceListOld(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (typeBuilder_ == null) {
                    result.type_ = type_;
                } else {
                    result.type_ = typeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.serialized_ = serialized_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.ftccommunity.simulator.net.SimulatorData.DeviceListOld) {
                    return mergeFrom((org.ftccommunity.simulator.net.SimulatorData.DeviceListOld) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.ftccommunity.simulator.net.SimulatorData.DeviceListOld other) {
                if (other == org.ftccommunity.simulator.net.SimulatorData.DeviceListOld.getDefaultInstance())
                    return this;
                if (other.hasType()) {
                    mergeType(other.getType());
                }
                if (other.hasSerialized()) {
                    bitField0_ |= 0x00000002;
                    serialized_ = other.serialized_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {
                    return false;
                }
                if (!hasSerialized()) {
                    return false;
                }
                if (!getType().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.ftccommunity.simulator.net.SimulatorData.DeviceListOld parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.ftccommunity.simulator.net.SimulatorData.DeviceListOld) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
                if (typeBuilder_ == null) {
                    return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                } else {
                    return typeBuilder_.getMessage();
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(
                    org.ftccommunity.simulator.net.SimulatorData.Type.Builder builderForValue) {
                if (typeBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    typeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    typeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder mergeType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            type_ != null &&
                            type_ != org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance()) {
                        type_ =
                                org.ftccommunity.simulator.net.SimulatorData.Type.newBuilder(type_).mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    typeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder clearType() {
                if (typeBuilder_ == null) {
                    type_ = null;
                    onChanged();
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type.Builder getTypeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getTypeFieldBuilder().getBuilder();
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
                if (typeBuilder_ != null) {
                    return typeBuilder_.getMessageOrBuilder();
                } else {
                    return type_ == null ?
                            org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>
            getTypeFieldBuilder() {
                if (typeBuilder_ == null) {
                    typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>(
                            getType(),
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                return typeBuilder_;
            }

            /**
             * <code>required string serialized = 2;</code>
             */
            public boolean hasSerialized() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required string serialized = 2;</code>
             */
            public String getSerialized() {
                Object ref = serialized_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        serialized_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>required string serialized = 2;</code>
             */
            public Builder setSerialized(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                serialized_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string serialized = 2;</code>
             */
            public com.google.protobuf.ByteString
            getSerializedBytes() {
                Object ref = serialized_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    serialized_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string serialized = 2;</code>
             */
            public Builder setSerializedBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                serialized_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string serialized = 2;</code>
             */
            public Builder clearSerialized() {
                bitField0_ = (bitField0_ & ~0x00000002);
                serialized_ = getDefaultInstance().getSerialized();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.DeviceListOld)
        }

    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.DeviceList}
     */
    public static final class DeviceList extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.DeviceList)
            DeviceListOrBuilder {
        public static final int TYPE_FIELD_NUMBER = 1;
        public static final int BRICKS_FIELD_NUMBER = 2;
        public static final com.google.protobuf.Parser<DeviceList> PARSER =
                new com.google.protobuf.AbstractParser<DeviceList>() {
                    public DeviceList parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new DeviceList(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.DeviceList)
        private static final org.ftccommunity.simulator.net.SimulatorData.DeviceList DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.ftccommunity.simulator.net.SimulatorData.DeviceList();
        }

        private int bitField0_;
        private org.ftccommunity.simulator.net.SimulatorData.Type type_;
        private java.util.List<org.ftccommunity.simulator.net.SimulatorData.BrickInfo> bricks_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use DeviceList.newBuilder() to construct.
        private DeviceList(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private DeviceList() {
            bricks_ = java.util.Collections.emptyList();
        }

        private DeviceList(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            org.ftccommunity.simulator.net.SimulatorData.Type.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = type_.toBuilder();
                            }
                            type_ = input.readMessage(org.ftccommunity.simulator.net.SimulatorData.Type.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(type_);
                                type_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                bricks_ = new java.util.ArrayList<org.ftccommunity.simulator.net.SimulatorData.BrickInfo>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            bricks_.add(input.readMessage(org.ftccommunity.simulator.net.SimulatorData.BrickInfo.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this));
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    bricks_ = java.util.Collections.unmodifiableList(bricks_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceList_descriptor;
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.ftccommunity.simulator.net.SimulatorData.DeviceList prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.DeviceList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceList_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.ftccommunity.simulator.net.SimulatorData.DeviceList.class, org.ftccommunity.simulator.net.SimulatorData.DeviceList.Builder.class);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        public java.util.List<org.ftccommunity.simulator.net.SimulatorData.BrickInfo> getBricksList() {
            return bricks_;
        }

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        public java.util.List<? extends org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder>
        getBricksOrBuilderList() {
            return bricks_;
        }

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        public int getBricksCount() {
            return bricks_.size();
        }

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.BrickInfo getBricks(int index) {
            return bricks_.get(index);
        }

        /**
         * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder getBricksOrBuilder(
                int index) {
            return bricks_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getType().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getBricksCount(); i++) {
                if (!getBricks(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, getType());
            }
            for (int i = 0; i < bricks_.size(); i++) {
                output.writeMessage(2, bricks_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getType());
            }
            for (int i = 0; i < bricks_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, bricks_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<DeviceList> getParserForType() {
            return PARSER;
        }

        public org.ftccommunity.simulator.net.SimulatorData.DeviceList getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code org.ftccommunity.simulator.net.DeviceList}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.DeviceList)
                org.ftccommunity.simulator.net.SimulatorData.DeviceListOrBuilder {
            private int bitField0_;
            private org.ftccommunity.simulator.net.SimulatorData.Type type_ = null;
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder> typeBuilder_;
            private java.util.List<org.ftccommunity.simulator.net.SimulatorData.BrickInfo> bricks_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.BrickInfo, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder, org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder> bricksBuilder_;

            // Construct using org.ftccommunity.simulator.net.SimulatorData.DeviceList.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceList_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceList_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.ftccommunity.simulator.net.SimulatorData.DeviceList.class, org.ftccommunity.simulator.net.SimulatorData.DeviceList.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getTypeFieldBuilder();
                    getBricksFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (typeBuilder_ == null) {
                    type_ = null;
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                if (bricksBuilder_ == null) {
                    bricks_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    bricksBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_DeviceList_descriptor;
            }

            public org.ftccommunity.simulator.net.SimulatorData.DeviceList getDefaultInstanceForType() {
                return org.ftccommunity.simulator.net.SimulatorData.DeviceList.getDefaultInstance();
            }

            public org.ftccommunity.simulator.net.SimulatorData.DeviceList build() {
                org.ftccommunity.simulator.net.SimulatorData.DeviceList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.ftccommunity.simulator.net.SimulatorData.DeviceList buildPartial() {
                org.ftccommunity.simulator.net.SimulatorData.DeviceList result = new org.ftccommunity.simulator.net.SimulatorData.DeviceList(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (typeBuilder_ == null) {
                    result.type_ = type_;
                } else {
                    result.type_ = typeBuilder_.build();
                }
                if (bricksBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        bricks_ = java.util.Collections.unmodifiableList(bricks_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.bricks_ = bricks_;
                } else {
                    result.bricks_ = bricksBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.ftccommunity.simulator.net.SimulatorData.DeviceList) {
                    return mergeFrom((org.ftccommunity.simulator.net.SimulatorData.DeviceList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.ftccommunity.simulator.net.SimulatorData.DeviceList other) {
                if (other == org.ftccommunity.simulator.net.SimulatorData.DeviceList.getDefaultInstance())
                    return this;
                if (other.hasType()) {
                    mergeType(other.getType());
                }
                if (bricksBuilder_ == null) {
                    if (!other.bricks_.isEmpty()) {
                        if (bricks_.isEmpty()) {
                            bricks_ = other.bricks_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureBricksIsMutable();
                            bricks_.addAll(other.bricks_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.bricks_.isEmpty()) {
                        if (bricksBuilder_.isEmpty()) {
                            bricksBuilder_.dispose();
                            bricksBuilder_ = null;
                            bricks_ = other.bricks_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            bricksBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getBricksFieldBuilder() : null;
                        } else {
                            bricksBuilder_.addAllMessages(other.bricks_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {
                    return false;
                }
                if (!getType().isInitialized()) {
                    return false;
                }
                for (int i = 0; i < getBricksCount(); i++) {
                    if (!getBricks(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.ftccommunity.simulator.net.SimulatorData.DeviceList parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.ftccommunity.simulator.net.SimulatorData.DeviceList) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
                if (typeBuilder_ == null) {
                    return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                } else {
                    return typeBuilder_.getMessage();
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(
                    org.ftccommunity.simulator.net.SimulatorData.Type.Builder builderForValue) {
                if (typeBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    typeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    typeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder mergeType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            type_ != null &&
                            type_ != org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance()) {
                        type_ =
                                org.ftccommunity.simulator.net.SimulatorData.Type.newBuilder(type_).mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    typeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder clearType() {
                if (typeBuilder_ == null) {
                    type_ = null;
                    onChanged();
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type.Builder getTypeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getTypeFieldBuilder().getBuilder();
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
                if (typeBuilder_ != null) {
                    return typeBuilder_.getMessageOrBuilder();
                } else {
                    return type_ == null ?
                            org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>
            getTypeFieldBuilder() {
                if (typeBuilder_ == null) {
                    typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>(
                            getType(),
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                return typeBuilder_;
            }

            private void ensureBricksIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    bricks_ = new java.util.ArrayList<org.ftccommunity.simulator.net.SimulatorData.BrickInfo>(bricks_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public java.util.List<org.ftccommunity.simulator.net.SimulatorData.BrickInfo> getBricksList() {
                if (bricksBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(bricks_);
                } else {
                    return bricksBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public int getBricksCount() {
                if (bricksBuilder_ == null) {
                    return bricks_.size();
                } else {
                    return bricksBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo getBricks(int index) {
                if (bricksBuilder_ == null) {
                    return bricks_.get(index);
                } else {
                    return bricksBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder setBricks(
                    int index, org.ftccommunity.simulator.net.SimulatorData.BrickInfo value) {
                if (bricksBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBricksIsMutable();
                    bricks_.set(index, value);
                    onChanged();
                } else {
                    bricksBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder setBricks(
                    int index, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder builderForValue) {
                if (bricksBuilder_ == null) {
                    ensureBricksIsMutable();
                    bricks_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    bricksBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder addBricks(org.ftccommunity.simulator.net.SimulatorData.BrickInfo value) {
                if (bricksBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBricksIsMutable();
                    bricks_.add(value);
                    onChanged();
                } else {
                    bricksBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder addBricks(
                    int index, org.ftccommunity.simulator.net.SimulatorData.BrickInfo value) {
                if (bricksBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBricksIsMutable();
                    bricks_.add(index, value);
                    onChanged();
                } else {
                    bricksBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder addBricks(
                    org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder builderForValue) {
                if (bricksBuilder_ == null) {
                    ensureBricksIsMutable();
                    bricks_.add(builderForValue.build());
                    onChanged();
                } else {
                    bricksBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder addBricks(
                    int index, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder builderForValue) {
                if (bricksBuilder_ == null) {
                    ensureBricksIsMutable();
                    bricks_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    bricksBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder addAllBricks(
                    Iterable<? extends org.ftccommunity.simulator.net.SimulatorData.BrickInfo> values) {
                if (bricksBuilder_ == null) {
                    ensureBricksIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, bricks_);
                    onChanged();
                } else {
                    bricksBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder clearBricks() {
                if (bricksBuilder_ == null) {
                    bricks_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    bricksBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public Builder removeBricks(int index) {
                if (bricksBuilder_ == null) {
                    ensureBricksIsMutable();
                    bricks_.remove(index);
                    onChanged();
                } else {
                    bricksBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder getBricksBuilder(
                    int index) {
                return getBricksFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder getBricksOrBuilder(
                    int index) {
                if (bricksBuilder_ == null) {
                    return bricks_.get(index);
                } else {
                    return bricksBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public java.util.List<? extends org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder>
            getBricksOrBuilderList() {
                if (bricksBuilder_ != null) {
                    return bricksBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(bricks_);
                }
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder addBricksBuilder() {
                return getBricksFieldBuilder().addBuilder(
                        org.ftccommunity.simulator.net.SimulatorData.BrickInfo.getDefaultInstance());
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder addBricksBuilder(
                    int index) {
                return getBricksFieldBuilder().addBuilder(
                        index, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.getDefaultInstance());
            }

            /**
             * <code>repeated .org.ftccommunity.simulator.net.BrickInfo bricks = 2;</code>
             */
            public java.util.List<org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder>
            getBricksBuilderList() {
                return getBricksFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.BrickInfo, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder, org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder>
            getBricksFieldBuilder() {
                if (bricksBuilder_ == null) {
                    bricksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            org.ftccommunity.simulator.net.SimulatorData.BrickInfo, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder, org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder>(
                            bricks_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    bricks_ = null;
                }
                return bricksBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.DeviceList)
        }

    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.BrickInfo}
     */
    public static final class BrickInfo extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.BrickInfo)
            BrickInfoOrBuilder {
        public static final int TYPE_FIELD_NUMBER = 1;
        public static final int ALIAS_FIELD_NUMBER = 2;
        public static final int SERIAL_FIELD_NUMBER = 3;
        public static final com.google.protobuf.Parser<BrickInfo> PARSER =
                new com.google.protobuf.AbstractParser<BrickInfo>() {
                    public BrickInfo parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new BrickInfo(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.BrickInfo)
        private static final org.ftccommunity.simulator.net.SimulatorData.BrickInfo DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.ftccommunity.simulator.net.SimulatorData.BrickInfo();
        }

        private int bitField0_;
        private org.ftccommunity.simulator.net.SimulatorData.Type type_;
        private volatile Object alias_;
        private volatile Object serial_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use BrickInfo.newBuilder() to construct.
        private BrickInfo(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private BrickInfo() {
            alias_ = "";
            serial_ = "";
        }

        private BrickInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            org.ftccommunity.simulator.net.SimulatorData.Type.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = type_.toBuilder();
                            }
                            type_ = input.readMessage(org.ftccommunity.simulator.net.SimulatorData.Type.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(type_);
                                type_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            alias_ = bs;
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            serial_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this));
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_BrickInfo_descriptor;
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.ftccommunity.simulator.net.SimulatorData.BrickInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.BrickInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_BrickInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.ftccommunity.simulator.net.SimulatorData.BrickInfo.class, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder.class);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
            return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
        }

        /**
         * <code>optional string alias = 2;</code>
         */
        public boolean hasAlias() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional string alias = 2;</code>
         */
        public String getAlias() {
            Object ref = alias_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    alias_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string alias = 2;</code>
         */
        public com.google.protobuf.ByteString
        getAliasBytes() {
            Object ref = alias_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                alias_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string serial = 3;</code>
         */
        public boolean hasSerial() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional string serial = 3;</code>
         */
        public String getSerial() {
            Object ref = serial_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    serial_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string serial = 3;</code>
         */
        public com.google.protobuf.ByteString
        getSerialBytes() {
            Object ref = serial_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                serial_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getType().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, getType());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getAliasBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, getSerialBytes());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getType());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getAliasBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, getSerialBytes());
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<BrickInfo> getParserForType() {
            return PARSER;
        }

        public org.ftccommunity.simulator.net.SimulatorData.BrickInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code org.ftccommunity.simulator.net.BrickInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.BrickInfo)
                org.ftccommunity.simulator.net.SimulatorData.BrickInfoOrBuilder {
            private int bitField0_;
            private org.ftccommunity.simulator.net.SimulatorData.Type type_ = null;
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder> typeBuilder_;
            private Object alias_ = "";
            private Object serial_ = "";

            // Construct using org.ftccommunity.simulator.net.SimulatorData.BrickInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_BrickInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_BrickInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.ftccommunity.simulator.net.SimulatorData.BrickInfo.class, org.ftccommunity.simulator.net.SimulatorData.BrickInfo.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getTypeFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (typeBuilder_ == null) {
                    type_ = null;
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                alias_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                serial_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_BrickInfo_descriptor;
            }

            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo getDefaultInstanceForType() {
                return org.ftccommunity.simulator.net.SimulatorData.BrickInfo.getDefaultInstance();
            }

            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo build() {
                org.ftccommunity.simulator.net.SimulatorData.BrickInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.ftccommunity.simulator.net.SimulatorData.BrickInfo buildPartial() {
                org.ftccommunity.simulator.net.SimulatorData.BrickInfo result = new org.ftccommunity.simulator.net.SimulatorData.BrickInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (typeBuilder_ == null) {
                    result.type_ = type_;
                } else {
                    result.type_ = typeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.alias_ = alias_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.serial_ = serial_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.ftccommunity.simulator.net.SimulatorData.BrickInfo) {
                    return mergeFrom((org.ftccommunity.simulator.net.SimulatorData.BrickInfo) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.ftccommunity.simulator.net.SimulatorData.BrickInfo other) {
                if (other == org.ftccommunity.simulator.net.SimulatorData.BrickInfo.getDefaultInstance())
                    return this;
                if (other.hasType()) {
                    mergeType(other.getType());
                }
                if (other.hasAlias()) {
                    bitField0_ |= 0x00000002;
                    alias_ = other.alias_;
                    onChanged();
                }
                if (other.hasSerial()) {
                    bitField0_ |= 0x00000004;
                    serial_ = other.serial_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {
                    return false;
                }
                if (!getType().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.ftccommunity.simulator.net.SimulatorData.BrickInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.ftccommunity.simulator.net.SimulatorData.BrickInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type getType() {
                if (typeBuilder_ == null) {
                    return type_ == null ? org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                } else {
                    return typeBuilder_.getMessage();
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(
                    org.ftccommunity.simulator.net.SimulatorData.Type.Builder builderForValue) {
                if (typeBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    typeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder setType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    typeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder mergeType(org.ftccommunity.simulator.net.SimulatorData.Type value) {
                if (typeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            type_ != null &&
                            type_ != org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance()) {
                        type_ =
                                org.ftccommunity.simulator.net.SimulatorData.Type.newBuilder(type_).mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    typeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public Builder clearType() {
                if (typeBuilder_ == null) {
                    type_ = null;
                    onChanged();
                } else {
                    typeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type.Builder getTypeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getTypeFieldBuilder().getBuilder();
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder getTypeOrBuilder() {
                if (typeBuilder_ != null) {
                    return typeBuilder_.getMessageOrBuilder();
                } else {
                    return type_ == null ?
                            org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance() : type_;
                }
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type type = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>
            getTypeFieldBuilder() {
                if (typeBuilder_ == null) {
                    typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            org.ftccommunity.simulator.net.SimulatorData.Type, org.ftccommunity.simulator.net.SimulatorData.Type.Builder, org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder>(
                            getType(),
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                return typeBuilder_;
            }

            /**
             * <code>optional string alias = 2;</code>
             */
            public boolean hasAlias() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string alias = 2;</code>
             */
            public String getAlias() {
                Object ref = alias_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        alias_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string alias = 2;</code>
             */
            public Builder setAlias(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                alias_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string alias = 2;</code>
             */
            public com.google.protobuf.ByteString
            getAliasBytes() {
                Object ref = alias_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    alias_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string alias = 2;</code>
             */
            public Builder setAliasBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                alias_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string alias = 2;</code>
             */
            public Builder clearAlias() {
                bitField0_ = (bitField0_ & ~0x00000002);
                alias_ = getDefaultInstance().getAlias();
                onChanged();
                return this;
            }

            /**
             * <code>optional string serial = 3;</code>
             */
            public boolean hasSerial() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional string serial = 3;</code>
             */
            public String getSerial() {
                Object ref = serial_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        serial_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string serial = 3;</code>
             */
            public Builder setSerial(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                serial_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string serial = 3;</code>
             */
            public com.google.protobuf.ByteString
            getSerialBytes() {
                Object ref = serial_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    serial_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string serial = 3;</code>
             */
            public Builder setSerialBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                serial_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string serial = 3;</code>
             */
            public Builder clearSerial() {
                bitField0_ = (bitField0_ & ~0x00000004);
                serial_ = getDefaultInstance().getSerial();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.BrickInfo)
        }

    }

    /**
     * Protobuf type {@code org.ftccommunity.simulator.net.Type}
     */
    public static final class Type extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:org.ftccommunity.simulator.net.Type)
            TypeOrBuilder {
        public static final int TYPE_FIELD_NUMBER = 1;
        public static final com.google.protobuf.Parser<Type> PARSER =
                new com.google.protobuf.AbstractParser<Type>() {
                    public Type parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        try {
                            return new Type(input, extensionRegistry);
                        } catch (RuntimeException e) {
                            if (e.getCause() instanceof
                                    com.google.protobuf.InvalidProtocolBufferException) {
                                throw (com.google.protobuf.InvalidProtocolBufferException)
                                        e.getCause();
                            }
                            throw e;
                        }
                    }
                };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:org.ftccommunity.simulator.net.Type)
        private static final org.ftccommunity.simulator.net.SimulatorData.Type DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.ftccommunity.simulator.net.SimulatorData.Type();
        }

        private int bitField0_;
        private int type_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use Type.newBuilder() to construct.
        private Type(com.google.protobuf.GeneratedMessage.Builder builder) {
            super(builder);
        }

        private Type() {
            type_ = 1;
        }

        private Type(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            org.ftccommunity.simulator.net.SimulatorData.Type.Types value = org.ftccommunity.simulator.net.SimulatorData.Type.Types.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                type_ = rawValue;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
                throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                                e.getMessage()).setUnfinishedMessage(this));
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Type_descriptor;
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.ftccommunity.simulator.net.SimulatorData.Type prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static org.ftccommunity.simulator.net.SimulatorData.Type getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Type_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.ftccommunity.simulator.net.SimulatorData.Type.class, org.ftccommunity.simulator.net.SimulatorData.Type.Builder.class);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
         */
        public org.ftccommunity.simulator.net.SimulatorData.Type.Types getType() {
            org.ftccommunity.simulator.net.SimulatorData.Type.Types result = org.ftccommunity.simulator.net.SimulatorData.Type.Types.valueOf(type_);
            return result == null ? org.ftccommunity.simulator.net.SimulatorData.Type.Types.NONE : result;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, type_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, type_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<Type> getParserForType() {
            return PARSER;
        }

        public org.ftccommunity.simulator.net.SimulatorData.Type getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code org.ftccommunity.simulator.net.Type.Types}
         */
        public enum Types
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>NONE = 1;</code>
             */
            NONE(0, 1),
            /**
             * <code>LEGACY_MOTOR = 2;</code>
             */
            LEGACY_MOTOR(1, 2),
            /**
             * <code>LEGACY_LIGHT = 3;</code>
             */
            LEGACY_LIGHT(2, 3),
            /**
             * <code>LEGACY_TOUCH = 4;</code>
             */
            LEGACY_TOUCH(3, 4),
            /**
             * <code>USB_MOTOR = 5;</code>
             */
            USB_MOTOR(4, 5),
            /**
             * <code>USB_SERVO = 6;</code>
             */
            USB_SERVO(5, 6),
            /**
             * <code>DEVICE_LIST = 7;</code>
             */
            DEVICE_LIST(6, 7),
            /**
             * <code>BRICK_INFO = 8;</code>
             */
            BRICK_INFO(7, 8),
            /**
             * <code>SIM_DATA = 9;</code>
             */
            SIM_DATA(8, 9),
            /**
             * <code>OPT_DATA1 = 10;</code>
             */
            OPT_DATA1(9, 10),
            /**
             * <code>OPT_DATA2 = 11;</code>
             */
            OPT_DATA2(10, 11),;

            /**
             * <code>NONE = 1;</code>
             */
            public static final int NONE_VALUE = 1;
            /**
             * <code>LEGACY_MOTOR = 2;</code>
             */
            public static final int LEGACY_MOTOR_VALUE = 2;
            /**
             * <code>LEGACY_LIGHT = 3;</code>
             */
            public static final int LEGACY_LIGHT_VALUE = 3;
            /**
             * <code>LEGACY_TOUCH = 4;</code>
             */
            public static final int LEGACY_TOUCH_VALUE = 4;
            /**
             * <code>USB_MOTOR = 5;</code>
             */
            public static final int USB_MOTOR_VALUE = 5;
            /**
             * <code>USB_SERVO = 6;</code>
             */
            public static final int USB_SERVO_VALUE = 6;
            /**
             * <code>DEVICE_LIST = 7;</code>
             */
            public static final int DEVICE_LIST_VALUE = 7;
            /**
             * <code>BRICK_INFO = 8;</code>
             */
            public static final int BRICK_INFO_VALUE = 8;
            /**
             * <code>SIM_DATA = 9;</code>
             */
            public static final int SIM_DATA_VALUE = 9;
            /**
             * <code>OPT_DATA1 = 10;</code>
             */
            public static final int OPT_DATA1_VALUE = 10;
            /**
             * <code>OPT_DATA2 = 11;</code>
             */
            public static final int OPT_DATA2_VALUE = 11;
            private static final Types[] VALUES = values();
            private static com.google.protobuf.Internal.EnumLiteMap<Types>
                    internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Types>() {
                        public Types findValueByNumber(int number) {
                            return Types.valueOf(number);
                        }
                    };
            private final int index;
            private final int value;

            private Types(int index, int value) {
                this.index = index;
                this.value = value;
            }

            public static Types valueOf(int value) {
                switch (value) {
                    case 1:
                        return NONE;
                    case 2:
                        return LEGACY_MOTOR;
                    case 3:
                        return LEGACY_LIGHT;
                    case 4:
                        return LEGACY_TOUCH;
                    case 5:
                        return USB_MOTOR;
                    case 6:
                        return USB_SERVO;
                    case 7:
                        return DEVICE_LIST;
                    case 8:
                        return BRICK_INFO;
                    case 9:
                        return SIM_DATA;
                    case 10:
                        return OPT_DATA1;
                    case 11:
                        return OPT_DATA2;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Types>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.Type.getDescriptor().getEnumTypes().get(0);
            }

            public static Types valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:org.ftccommunity.simulator.net.Type.Types)
        }

        /**
         * Protobuf type {@code org.ftccommunity.simulator.net.Type}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:org.ftccommunity.simulator.net.Type)
                org.ftccommunity.simulator.net.SimulatorData.TypeOrBuilder {
            private int bitField0_;
            private int type_ = 1;

            // Construct using org.ftccommunity.simulator.net.SimulatorData.Type.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Type_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Type_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.ftccommunity.simulator.net.SimulatorData.Type.class, org.ftccommunity.simulator.net.SimulatorData.Type.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                type_ = 1;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.ftccommunity.simulator.net.SimulatorData.internal_static_org_ftccommunity_simulator_net_Type_descriptor;
            }

            public org.ftccommunity.simulator.net.SimulatorData.Type getDefaultInstanceForType() {
                return org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance();
            }

            public org.ftccommunity.simulator.net.SimulatorData.Type build() {
                org.ftccommunity.simulator.net.SimulatorData.Type result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.ftccommunity.simulator.net.SimulatorData.Type buildPartial() {
                org.ftccommunity.simulator.net.SimulatorData.Type result = new org.ftccommunity.simulator.net.SimulatorData.Type(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.type_ = type_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.ftccommunity.simulator.net.SimulatorData.Type) {
                    return mergeFrom((org.ftccommunity.simulator.net.SimulatorData.Type) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.ftccommunity.simulator.net.SimulatorData.Type other) {
                if (other == org.ftccommunity.simulator.net.SimulatorData.Type.getDefaultInstance())
                    return this;
                if (other.hasType()) {
                    setType(other.getType());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.ftccommunity.simulator.net.SimulatorData.Type parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.ftccommunity.simulator.net.SimulatorData.Type) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
             */
            public org.ftccommunity.simulator.net.SimulatorData.Type.Types getType() {
                org.ftccommunity.simulator.net.SimulatorData.Type.Types result = org.ftccommunity.simulator.net.SimulatorData.Type.Types.valueOf(type_);
                return result == null ? org.ftccommunity.simulator.net.SimulatorData.Type.Types.NONE : result;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
             */
            public Builder setType(org.ftccommunity.simulator.net.SimulatorData.Type.Types value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                type_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>required .org.ftccommunity.simulator.net.Type.Types type = 1;</code>
             */
            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = 1;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:org.ftccommunity.simulator.net.Type)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
